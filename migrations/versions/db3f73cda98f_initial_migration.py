"""Initial migration

Revision ID: db3f73cda98f
Revises: b81df7ad2c29
Create Date: 2024-10-07 10:39:29.103554

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'db3f73cda98f'
down_revision = 'b81df7ad2c29'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('detalles_inventario_fisico')
    op.drop_table('inventarios_fisicos')
    op.drop_table('items')
    with op.batch_alter_table('ajustes_inventario', schema=None) as batch_op:
        batch_op.drop_constraint('ajustes_inventario_item_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'items_inventario', ['item_id'], ['id'])

    with op.batch_alter_table('items_factura', schema=None) as batch_op:
        batch_op.drop_constraint('items_factura_item_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'items_inventario', ['item_id'], ['id'])

    with op.batch_alter_table('items_pre_factura', schema=None) as batch_op:
        batch_op.drop_constraint('items_pre_factura_item_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'items_inventario', ['item_id'], ['id'])

    with op.batch_alter_table('movimientos_inventario', schema=None) as batch_op:
        batch_op.drop_constraint('movimientos_inventario_item_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('movimientos_inventario_factura_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('movimientos_inventario_nota_credito_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'items_inventario', ['item_id'], ['id'])
        batch_op.drop_column('nota_credito_id')
        batch_op.drop_column('factura_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('movimientos_inventario', schema=None) as batch_op:
        batch_op.add_column(sa.Column('factura_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('nota_credito_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('movimientos_inventario_nota_credito_id_fkey', 'notas_credito', ['nota_credito_id'], ['id'])
        batch_op.create_foreign_key('movimientos_inventario_factura_id_fkey', 'facturacion', ['factura_id'], ['id'])
        batch_op.create_foreign_key('movimientos_inventario_item_id_fkey', 'items', ['item_id'], ['id'])

    with op.batch_alter_table('items_pre_factura', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('items_pre_factura_item_id_fkey', 'items', ['item_id'], ['id'])

    with op.batch_alter_table('items_factura', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('items_factura_item_id_fkey', 'items', ['item_id'], ['id'])

    with op.batch_alter_table('ajustes_inventario', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('ajustes_inventario_item_id_fkey', 'items', ['item_id'], ['id'])

    op.create_table('items',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('items_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('codigo', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('nombre', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('descripcion', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('tipo', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('categoria', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('precio', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('stock', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fecha_creacion', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('fecha_actualizacion', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='items_pkey'),
    sa.UniqueConstraint('codigo', name='items_codigo_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('inventarios_fisicos',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('inventarios_fisicos_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('fecha', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('usuario_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('estado', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuarios.id'], name='inventarios_fisicos_usuario_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='inventarios_fisicos_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('detalles_inventario_fisico',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('inventario_fisico_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('item_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('cantidad_sistema', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('cantidad_contada', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('diferencia', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['inventario_fisico_id'], ['inventarios_fisicos.id'], name='detalles_inventario_fisico_inventario_fisico_id_fkey'),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], name='detalles_inventario_fisico_item_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='detalles_inventario_fisico_pkey')
    )
    # ### end Alembic commands ###
