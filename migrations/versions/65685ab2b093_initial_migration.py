"""Initial migration

Revision ID: 65685ab2b093
Revises: 
Create Date: 2024-09-21 22:19:44.136336

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '65685ab2b093'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transaccion')
    op.drop_table('historial')
    op.drop_table('banco')
    op.drop_table('lugares')
    op.drop_table('facturas')
    op.drop_table('reportes')
    with op.batch_alter_table('usuario', schema=None) as batch_op:
        batch_op.drop_index('ix_usuario_email')
        batch_op.drop_index('ix_usuario_username')

    op.drop_table('usuario')
    op.drop_table('planes')
    with op.batch_alter_table('empresas', schema=None) as batch_op:
        batch_op.add_column(sa.Column('rnc', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('direccion', sa.String(length=200), nullable=True))
        batch_op.add_column(sa.Column('fecha_creacion', sa.DateTime(), nullable=True))
        batch_op.create_unique_constraint(None, ['rnc'])

    with op.batch_alter_table('transacciones', schema=None) as batch_op:
        batch_op.create_foreign_key(None, 'cuentas', ['cuenta_id'], ['id'])

    with op.batch_alter_table('usuarios', schema=None) as batch_op:
        batch_op.drop_column('ultimo_acceso')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('usuarios', schema=None) as batch_op:
        batch_op.add_column(sa.Column('ultimo_acceso', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))

    with op.batch_alter_table('transacciones', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')

    with op.batch_alter_table('empresas', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('fecha_creacion')
        batch_op.drop_column('direccion')
        batch_op.drop_column('rnc')

    op.create_table('planes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nombre', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('descripcion', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('precio', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('duracion', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='planes_pkey')
    )
    op.create_table('usuario',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('password_hash', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='usuario_pkey')
    )
    with op.batch_alter_table('usuario', schema=None) as batch_op:
        batch_op.create_index('ix_usuario_username', ['username'], unique=True)
        batch_op.create_index('ix_usuario_email', ['email'], unique=True)

    op.create_table('reportes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('tipo', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('fecha', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('contenido', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='reportes_pkey')
    )
    op.create_table('facturas',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('numero', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('fecha', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('monto', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('cliente_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['cliente_id'], ['usuarios.id'], name='facturas_cliente_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='facturas_pkey'),
    sa.UniqueConstraint('numero', name='facturas_numero_key')
    )
    op.create_table('lugares',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nombre', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('tipo', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('direccion', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('ciudad', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('estado', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('pais', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('codigo_postal', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('latitud', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('longitud', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('usuario_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fecha_creacion', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('fecha_actualizacion', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuarios.id'], name='lugares_usuario_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='lugares_pkey')
    )
    op.create_table('banco',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nombre', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('telefono', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('contacto', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('telefono_contacto', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('estatus', postgresql.ENUM('activo', 'inactivo', name='banco_estatus_enum'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='banco_pkey')
    )
    op.create_table('historial',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('accion', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('fecha', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='historial_pkey')
    )
    op.create_table('transaccion',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('tipo', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('monto', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('descripcion', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('cuenta_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='transaccion_pkey')
    )
    # ### end Alembic commands ###
